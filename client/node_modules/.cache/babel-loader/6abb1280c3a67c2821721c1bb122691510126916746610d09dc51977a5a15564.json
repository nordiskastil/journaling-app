{"ast":null,"code":"var _jsxFileName = \"D:\\\\Code Bootcamp Technigo\\\\Final-project\\\\journaling-app\\\\client\\\\src\\\\pages\\\\Gratitude.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useAuth } from '../context/AuthContext';\nimport headerImage from '../assets/Gratitude-illustration.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Gratitude = () => {\n  _s();\n  const [entries, setEntries] = useState(['', '', '']);\n  const userId = '123'; // Replace with actual user ID\n  const date = new Date().toISOString().substring(0, 10);\n  const handleChange = (index, value) => {\n    if (value.length <= 300) {\n      const newEntries = [...entries];\n      newEntries[index] = value;\n      setEntries(newEntries);\n    }\n  };\n  const handleSave = async () => {\n    try {\n      await axios.post('http://localhost:5000/api/gratitude', {\n        user: userId,\n        date,\n        entries\n      });\n      alert('Gratitude saved!');\n    } catch (err) {\n      console.error('Error saving gratitude entry', err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"gratitude-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"page-header-image\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: headerImage,\n        alt: \"Header\",\n        className: \"full-width-image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Three things that made me smile today \\uD83D\\uDE0A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), entries.map((entry, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"gratitude-entry\",\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: entry,\n        onChange: e => handleChange(index, e.target.value),\n        placeholder: `Gratitude ${index + 1}`,\n        maxLength: 300,\n        rows: 3,\n        cols: 50\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [entry.length, \"/What are you grateful for today?\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSave,\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(Gratitude, \"sNPQf9dYFhlH801HN/Ubkf0Lluo=\");\n_c = Gratitude;\nexport default Gratitude;\nvar _c;\n$RefreshReg$(_c, \"Gratitude\");","map":{"version":3,"names":["React","useState","axios","useAuth","headerImage","jsxDEV","_jsxDEV","Gratitude","_s","entries","setEntries","userId","date","Date","toISOString","substring","handleChange","index","value","length","newEntries","handleSave","post","user","alert","err","console","error","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","map","entry","onChange","e","target","placeholder","maxLength","rows","cols","onClick","_c","$RefreshReg$"],"sources":["D:/Code Bootcamp Technigo/Final-project/journaling-app/client/src/pages/Gratitude.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport headerImage from '../assets/Gratitude-illustration.png';\r\n\r\nconst Gratitude = () => {\r\n  const [entries, setEntries] = useState(['', '', '']);\r\n  const userId = '123'; // Replace with actual user ID\r\n  const date = new Date().toISOString().substring(0, 10);\r\n\r\n  const handleChange = (index, value) => {\r\n    if (value.length <= 300) {\r\n      const newEntries = [...entries];\r\n      newEntries[index] = value;\r\n      setEntries(newEntries);\r\n    }\r\n  };\r\n\r\n  const handleSave = async () => {\r\n    try {\r\n      await axios.post('http://localhost:5000/api/gratitude', {\r\n        user: userId,\r\n        date,\r\n        entries,\r\n      });\r\n      alert('Gratitude saved!');\r\n    } catch (err) {\r\n      console.error('Error saving gratitude entry', err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"gratitude-page\">\r\n      <header className=\"page-header-image\">\r\n        <img src={headerImage} alt=\"Header\" className=\"full-width-image\" />\r\n      </header>\r\n      <h1>Three things that made me smile today ðŸ˜Š</h1>\r\n      {entries.map((entry, index) => (\r\n        <div key={index} className=\"gratitude-entry\">\r\n          <textarea\r\n            value={entry}\r\n            onChange={(e) => handleChange(index, e.target.value)}\r\n            placeholder={`Gratitude ${index + 1}`}\r\n            maxLength={300}\r\n            rows={3}\r\n            cols={50}\r\n          />\r\n          <p>{entry.length}/What are you grateful for today?</p>\r\n        </div>\r\n      ))}\r\n      <button onClick={handleSave}>Save</button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Gratitude;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}